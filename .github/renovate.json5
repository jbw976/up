{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    "helpers:pinGitHubActionDigests",
    ":semanticCommits"
  ],
  // We only want renovate to rebase PRs when they have conflicts,
  // default "auto" mode is not required.
  "rebaseWhen": "conflicted",
  // The maximum number of PRs to be created in parallel
  "prConcurrentLimit": 5,
  // The branches renovate should target
  // PLEASE UPDATE THIS WHEN RELEASING.
  "baseBranches": [
    "main"
  ],
  "ignorePaths": [
    "docs/**",
  ],
  "postUpdateOptions": [
    "gomodTidy"
  ],
  // All PRs should have a label
  "labels": [
    "automated"
  ],
  "customManagers": [
    {
      "customType": "regex",
      "description": "Bump Go version used in workflows",
      "fileMatch": [
        "^\\.github\\/workflows\\/[^/]+\\.ya?ml$"
      ],
      "matchStrings": [
        "GO_VERSION: '(?<currentValue>.*?)'\\n"
      ],
      "datasourceTemplate": "golang-version",
      "depNameTemplate": "golang"
    },
    {
      "customType": "regex",
      "description": "Bump golangci-lint version in workflows and the Makefile",
      "fileMatch": [
        "^\\.github\\/workflows\\/[^/]+\\.ya?ml$",
        "^Makefile$"
      ],
      "matchStrings": [
        "GOLANGCI_VERSION: 'v(?<currentValue>.*?)'\\n",
        "GOLANGCILINT_VERSION = (?<currentValue>.*?)\\n"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "golangci/golangci-lint",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "customType": "regex",
      "description": "Bump helm version in the Makefile",
      "fileMatch": [
        "^Makefile$"
      ],
      "matchStrings": [
        "HELM3_VERSION = (?<currentValue>.*?)\\n"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "helm/helm",
    },
    {
      "customType": "regex",
      "description": "Bump kind version in the Makefile",
      "fileMatch": [
        "^Makefile$"
      ],
      "matchStrings": [
        "KIND_VERSION = (?<currentValue>.*?)\\n"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "kubernetes-sigs/kind",
    }
  ],
  "crossplane": {
    "fileMatch": [
      "(^|/)test/e2e/.*\\.ya?ml$"
    ]
  },
  // PackageRules disabled below should be enabled in case of vulnerabilities
  "vulnerabilityAlerts": {
    "enabled": true
  },
  "osvVulnerabilityAlerts": true,
  // Renovate evaluates all packageRules in order, so low priority rules should
  // be at the beginning, high priority at the end
  "packageRules": [
    {
      "description": "Automerge non-major updates",
      "matchUpdateTypes": ["minor", "patch", "digest"],
      "automerge": true
    },
    {
      "description": "Generate code after upgrading go dependencies",
      "matchDatasources": [
        "go"
      ],
      postUpgradeTasks: {
        // Post-upgrade tasks that are executed before a commit is made by Renovate.
        "commands": [
          "git submodule update --init",
          "install-tool golang $(grep -oP \"^go \\K.+\" go.mod)",
          "make generate",
        ],
        fileFilters: [
          "**/*"
        ],
        executionMode: "update",
      },
    },
    {
      "description": "Lint code after upgrading golangci-lint",
      "matchDepNames": [
        "golangci/golangci-lint"
      ],
      postUpgradeTasks: {
        // Post-upgrade tasks that are executed before a commit is made by Renovate.
        "commands": [
          "git submodule update --init",
          "install-tool golang $(grep -oP \"^go \\K.+\" go.mod)",
          "make go.lint",
        ],
        fileFilters: [
          "**/*"
        ],
        executionMode: "update",
      },
    },
    {
      "matchManagers": [
        "crossplane"
      ],
      "matchFileNames": [
        "test/e2e/**"
      ],
      "groupName": "e2e-manifests",
    },
    {
      "description": "Ignore non-security related updates to release branches",
      matchBaseBranches: [
        "/^release-.*/"
      ],
      enabled: false,
    },
    {
      "description": "Still update Docker images on release branches though",
      "matchDatasources": [
        "docker"
      ],
      matchBaseBranches: [
        "/^release-.*/"
      ],
      enabled: true,
    },
    {
      "description": "Only get Docker image updates every 2 weeks to reduce noise",
      "matchDatasources": [
        "docker"
      ],
      "schedule": [
        "every 2 week on monday"
      ],
      enabled: true,
    },
    {
      "description": "Ignore k8s.io/client-go older versions, they switched to semantic version and old tags are still available in the repo",
      "matchDatasources": [
        "go"
      ],
      "matchDepNames": [
        "k8s.io/client-go"
      ],
      "allowedVersions": "<1.0",
    },
    {
      "description": "Only get dependency digest updates every month to reduce noise, except crossplane-runtime",
      "excludePackageNames": [
        "github.com/crossplane/crossplane-runtime"
      ],
      "matchDatasources": [
        "go"
      ],
      "matchUpdateTypes": [
        "digest",
      ],
      "extends": [
        "schedule:monthly"
      ],
    },
    {
      "description": "Group all go version updates",
      "matchDatasources": [
        "golang-version"
      ],
      "groupName": "golang version",
    }
  ],
}